package sgcib.clips.reporting;

import java.util.List;

import org.eclipse.birt.report.engine.api.script.IUpdatableDataSetRow;
import org.eclipse.birt.report.engine.api.script.ScriptException;
import org.eclipse.birt.report.engine.api.script.eventadapter.ScriptedDataSetEventAdapter;
import org.eclipse.birt.report.engine.api.script.instance.IDataSetInstance;

/**
 * Generic clips data set event handler.
 */
public abstract class ClipsDataSetEventHandler<T extends Object> extends ScriptedDataSetEventAdapter {

	/**
	 * An index.
	 */
	protected int index = 0;

	/**
	 * The datas to consider.
	 */
	public List<T> dataRows;

	/**
	 * Default constructor.
	 */
	public ClipsDataSetEventHandler() {
		super();
	}

	/**
	 * Iterate on each data and update a row in the data set.
	 */
	@Override
	public boolean fetch(final IDataSetInstance dataSet, final IUpdatableDataSetRow row) throws ScriptException {
		boolean continueFetching = false;
		if (this.dataRows.size() > 0) {
			if (this.index < this.dataRows.size()) {
				updateRow(row, this.dataRows.get(this.index));
				this.index++;
				continueFetching = true;
			} else {
				this.index = 0;
				continueFetching = false;
			}
		}
		return continueFetching;
	}

	/**
	 * Update a row of the data set with the datas from {@link ParameterDataRow}
	 * 
	 * @param row
	 *            the row to update.
	 * @param r
	 *            the datas to put in the row.
	 * @throws ScriptException
	 */
	protected abstract void updateRow(final IUpdatableDataSetRow row, final T r) throws ScriptException;

}